#
# Used by me to development purposes.
#

MainConf = {
    # The number of concurrent workers for the accounts. Default is the number
    # of accounts to sync.
    'max_sync_accounts': 7,
}

UI = None

def configure(ui):
    global UI
    UI = ui

def preHook(actionName, actionOptions, hook):
    hook.ended()

def postHook(hook):
    hook.ended()

def exceptionHook(error, hook):
    hook.ended()

from imapfw.api import controllers, types, drivers

maildirsPath = "~/.imapfw/Mail"


MaildirConfA = {
    'path': maildirsPath + '/MaildirA',
    'max_connections': 9,
}

MaildirConfB = {
    'path': maildirsPath + '/MaildirB',
    'max_connections': 2,
}

ImapConfA = {
    'backend':  'imaplib3',
    'host':      '127.0.0.1',
    'port':     '10143',
    'username': 'nicolas',
    'password': 'sebrecht',
    'max_connections': 3,
}

class FakeImapDriver(controllers.FakeDriver):
    conf = controllers.FakeDriver.ImapConf

class FakeMaildirDriver(controllers.FakeDriver):
    conf = controllers.FakeDriver.MaildirConf

class MaildirA(types.Maildir):
    conf = MaildirConfA
    driver = drivers.Maildir # Default: drivers.Maildir.
    controllers = [FakeMaildirDriver]

class MaildirB(types.Maildir):
    conf = MaildirConfB
    driver = drivers.Maildir
    controllers = [FakeMaildirDriver]

class ImapA(types.Imap):
    conf = ImapConfA
    driver = drivers.Imap # Default: drivers.Imap.
    controllers = [FakeImapDriver]


class Home(types.Account):
    engine = 'SyncAccount'
    left = MaildirA
    right = ImapA

class Foundation(types.Account):
    engine = 'SyncAccount'
    left = MaildirB
    right = ImapA


# vim: syntax=python ts=4 expandtab :
